#author: nullevent

variables:
- name: BuildParameters.solution
  value: '**\*.sln'
- name: BuildConfiguration
  value: Release
- name: BuildPlatform
  value: 'Any CPU'
  
pool:
  name: Azure Pipelines
  vmImage: 'windows-2019'
  demands:
  - msbuild
  - visualstudio
  - vstest

resources:
  repositories:
  - repository: Farmer 
    type: github
    endpoint: robyrussell
    name: GhostPack/Rubeus

trigger:
- main

steps:
- checkout: Rubeus

- task: NuGetToolInstaller@0
  displayName: Use NuGet 4.4.1
  inputs:
    versionSpec: 4.4.1
- task: NuGetCommand@2
  displayName: NuGet restore
  inputs:
    solution: $(BuildParameters.solution)

- task: UsePythonVersion@0
  displayName: 'Use Python 3.x'
- task: PowerShell@2
  displayName: PowerShell Script for InvisibilityCloak
  inputs:
    targetType: inline
    script: |
      wget https://raw.githubusercontent.com/h4wkst3r/InvisibilityCloak/main/InvisibilityCloak.py -o InvisibilityCloak.py
      wget https://raw.githubusercontent.com/RoxanaKovaci/Azure-pipelines/master/random-words.py -o words.py

      pip3 install requests
      pip3 install random

      $folders = Get-ChildItem -Path ".\" -directory
      foreach ($f in $folders) {$pos = $(python.exe .\words.py); python.exe .\InvisibilityCloak.py -d $f.FullName -n $pos -m reverse; echo "$f is now $pos" >> .\correlation.txt}

      gc .\correlation.txt

- task: VSBuild@1
  displayName: Build solution **\*.sln
  inputs:
    solution: $(BuildParameters.solution)
    platform: $(BuildPlatform)
    configuration: $(BuildConfiguration)
- task: VSTest@2
  displayName: VsTest - testAssemblies
  inputs:
    testAssemblyVer2: >-
      **\$(BuildConfiguration)\*test*.dll
       !**\obj\**
    platform: $(BuildPlatform)
    configuration: $(BuildConfiguration)
- task: PublishSymbols@2
  displayName: Publish symbols path
  continueOnError: True
  inputs:
    SearchPattern: '**\bin\**\*.pdb'
    PublishSymbols: false
    SymbolServerType: TeamServices
- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  condition: succeededOrFailed()
  inputs:
    SourceFolder: $(system.defaultworkingdirectory)
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: $(build.artifactstagingdirectory)

- task: PowerShell@2
  displayName: PowerShell Script for ConfuserEx
  inputs:
    targetType: inline
    script: |
      # make the confused folder
      mkdir D:\a\1\a\Confused

      # download specific ConfuserEx version
      wget https://github.com/mkaring/ConfuserEx/releases/download/v1.6.0/ConfuserEx-CLI.zip -o ConfuserEx-CLI.zip
      Expand-Archive .\ConfuserEx-CLI.zip D:\a\1\a\

      $rb = "D:\a\1\a\Rubeus\*\bin\Release\*.exe"
      $rbf = (ls $rb).Name
      $rby = ($rbf -split ".exe")[0]

      # create confuser crpoj file
      New-Item D:\a\1\a\conf.crproj
      Set-Content D:\a\1\a\conf.crproj '<?xml version="1.0" encoding="utf-8"?>'
      Add-Content D:\a\1\a\conf.crproj '<project outputDir="D:\a\1\a\Confused\" baseDir="D:\a\1\a\" xmlns="http://confuser.codeplex.com">'
      Add-Content D:\a\1\a\conf.crproj '<rule preset="maximum" pattern="true">'
      Add-Content D:\a\1\a\conf.crproj '<protection id="anti debug" />'
      Add-Content D:\a\1\a\conf.crproj '<protection id="anti dump" />'
      Add-Content D:\a\1\a\conf.crproj '<protection id="anti ildasm" />'
      Add-Content D:\a\1\a\conf.crproj '<protection id="constants" />'
      Add-Content D:\a\1\a\conf.crproj '<protection id="ctrl flow" />'
      Add-Content D:\a\1\a\conf.crproj '<protection id="invalid metadata" />'
      Add-Content D:\a\1\a\conf.crproj '<protection id="ref proxy" />'
      Add-Content D:\a\1\a\conf.crproj '<protection id="resources" />'
      Add-Content D:\a\1\a\conf.crproj '<protection id="watermark" action="remove" />'
      Add-Content D:\a\1\a\conf.crproj '</rule>'
      Add-Content D:\a\1\a\conf.crproj "<module path='D:\a\1\a\Rubeus\$rby\bin\Release\$rbf' />"
      Add-Content D:\a\1\a\conf.crproj "</project>"

      # execute confuser on everything
      D:\a\1\a\Confuser.CLI.exe D:\a\1\a\conf.crproj -n
      cp D:\a\1\s\correlation.txt D:\a\1\a\Confused\correlation.txt

- task: PowerShell@2
  displayName: PowerShell Script for Confused EXEs
  inputs:
    targetType: inline
    script: |
      mkdir $(Pipeline.Workspace)\a\Output\
      gci -recurse *.exe -Path $(Pipeline.Workspace)\a\Confused\| Move-Item -Destination $(Pipeline.Workspace)\a\Output\
      gci -recurse *.txt -Path $(Pipeline.Workspace)\a\Confused\| Move-Item -Destination $(Pipeline.Workspace)\a\Output\
      Compress-Archive -Path $(Pipeline.Workspace)\a\Output\ -DestinationPath $(Pipeline.Workspace)\a\Output\drop.zip

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  condition: succeededOrFailed()
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)\Output\drop.zip
    ArtifactName: 'output'
    publishLocation: 'Container'

schedules:
- cron: "0 2 * * Mon,Tue,Wed,Thur,Fri"
  displayName: Daily night build
  branches:
    include:
    - main
  always: true